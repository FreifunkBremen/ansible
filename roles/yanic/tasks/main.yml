---
- name: Create users
  user:
    name: yanic
    generate_ssh_key: yes
    ssh_key_type: rsa
    ssh_key_file: .ssh/id_rsa
    ssh_key_comment: "yanic@{{ inventory_hostname }}"

- name: Fetch yanic sources
  command:
    cmd: /usr/local/go/bin/go get -d github.com/FreifunkBremen/yanic
    creates: /opt/go/src/github.com/FreifunkBremen/yanic
  environment:
    GOPATH: /opt/go

- name: Install yanic
  command:
    cmd: /usr/local/go/bin/go install github.com/FreifunkBremen/yanic@latest
    creates: /opt/go/bin/yanic
  environment:
    GOPATH: /opt/go
  notify:
    - restart yanic

- name: Configure yanic
  template:
    src: config.toml
    dest: /etc/yanic.conf
    mode: 0644
    owner: root
    group: root
  notify:
    - restart yanic

- name: Create directory
  file:
    path: "{{ yanic_meshviewer_path }}/"
    state: directory
    mode: 0755
    owner: yanic
    group: yanic

- name: Install system unit
  template:
    src: yanic.service
    dest: /lib/systemd/system/yanic.service
    mode: 0644
    owner: root
    group: root
  notify:
    - reload systemd
    - restart yanic

- name: Enable yanic
  service:
    name: yanic
    enabled: yes

- name: Install system publish unit
  template:
    src: "{{ item }}"
    dest: "/lib/systemd/system/{{ item }}"
    mode: 0644
    owner: root
    group: root
  when: yanic_publisher
  with_items:
    - yanic-publish.service
    - yanic-publish.timer
    - yanic-publish-ssh-master.service
  notify:
    - reload systemd
    - restart yanic-publish

- name: Configure system publish unit
  copy:
    dest: /etc/default/yanic-publish
    content: |
      REMOTE_HOST=downloads@webserver.bremen.freifunk.net
      REMOTE_PATH=data/

- name: Enable yanic-publish units
  service:
    name: "{{ item }}"
    enabled: yes
  when: yanic_publisher
  loop:
    - yanic-publish.timer
    - yanic-publish-ssh-master.service
