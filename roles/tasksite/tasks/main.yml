---
- name: Add user
  user:
    name: "{{ tasks_user }}"
    home: "/home/{{ tasks_user }}"
    shell: /bin/zsh
    groups: webusers

- name: Create needed private folder structure
  file:
    path: "{{ item }}"
    state: directory
    recurse: yes
    mode: 0700
    owner: "{{ tasks_user }}"
    group: "{{ tasks_group }}"
  with_items:
  - /home/{{ tasks_user }}/.config/etc/php
  - /home/{{ tasks_user }}/.local/bin
  - /home/{{ tasks_user }}/.var/repo
  - /home/{{ tasks_user }}/.var/storage
  - /home/{{ tasks_user }}/.var/tmp

- name: Create needed folder structure
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
    owner: "{{ tasks_user }}"
    group: "{{ tasks_group }}"
  with_items:
  - /var/www/{{ tasks_user }}
  - /var/www/{{ tasks_user }}/domains
  - /var/www/{{ tasks_user }}/cgi-bin
  - /var/www/{{ tasks_user }}/fcgi-bin
  - /var/www/{{ tasks_user }}/opt/phabricator

- name: Create directory for Apache log files
  file:
    path: "/var/log/apache2/{{ tasks_user }}"
    state: directory
    mode: 0750
    owner: root
    group: "{{ tasks_group }}"

- name: Install CGI wrapper
  template:
    src: php-fcgi-starter
    dest: "/var/www/{{ tasks_user }}/fcgi-bin/"
    mode: 0700
    owner: "{{ tasks_user }}"
    group: "{{ tasks_group }}"

- name: Install necessary packages
  apt:
    name:
      - python-mysqldb
      - python-pygments

# MySQL
- name: Generate MySQL password
  copy:
    src: "/home/{{ tasks_user }}/mysql-password"
    content: "{{ pwd }}"
    force: no
    mode: 0400
    owner: "{{ tasks_user }}"
    group: "{{ tasks_group }}"
  vars:
    pwd: "{{ lookup('password', '/dev/null length=20 chars=ascii_letters') }}"

- name: Fetch MySQL password
  slurp:
    src: "/home/{{ tasks_user }}/mysql-password"
  register: mysql_password_base64

- name: Create MySQL user
  mysql_user:
    name: phabric
    password: "{{ mysql_password_base64['content'] | b64decode }}"
    priv: '`phabricator\_%`.*:ALL'
    state: present

# Apache
- name: Get letsencrypt certificates
  lineinfile:
    dest: /etc/letsencrypt/domains.txt
    line: "{{ tasks_subdomain }}.{{ main_domain }} {{ tasks_subdomain }}.{{ alt_domain }}"
    create: yes
    mode: 0644
    owner: root
    group: root
  notify: regenerate certificates

- name: Install Apache site config
  template:
    src: apache-tasks.conf
    dest: "/etc/apache2/sites-available/{{ tasks_domain }}.conf"
    mode: 0644
    owner: root
    group: root
  notify: restart apache

- name: Enable Apache site config
  command: a2ensite {{ tasks_domain }}
  args:
    creates: /etc/apache2/sites-enabled/{{ tasks_domain }}.conf
  notify: restart apache

# Phabricator
- name: Install Phabricator components
  git:
    repo: "https://github.com/phacility/{{ item.name }}.git"
    dest: "/var/www/{{ tasks_user }}/opt/phabricator/{{ item.name }}"
    version: "{{ item.version }}"
    force: yes
  with_items:
    - { name: libphutil, version: 30065f1c5a39f4de8f3b67429d7d68af661f47bb }
    - { name: arcanist, version: b9e79d14c143afbfb2f29fd26a9a440fb397125c }
    - { name: phabricator, version: 3480b3e7ef00ff8a42f78f2be31bda8aab318353 }
  become: yes
  become_user: "{{ tasks_user }}"

- name: Create domain symlink
  file:
    state: link
    dest: "/var/www/{{ tasks_user }}/domains/{{ tasks_domain }}"
    src: ../opt/phabricator/phabricator/webroot
    owner: "{{ tasks_user }}"
    group: "{{ tasks_group }}"

- name: Copy .htaccess file
  copy:
    src: htaccess
    dest: "/var/www/{{ tasks_user }}/domains/{{ tasks_domain }}/.htaccess"
    mode: 0644
    owner: "{{ tasks_user }}"
    group: "{{ tasks_group }}"

- name: Copy custom PHP config
  template:
    src: php-extopts.ini
    dest: "/home/{{ tasks_user }}/.config/etc/php/"
    mode: 0644
    owner: "{{ tasks_user }}"
    group: "{{ tasks_group }}"

- name: Copy custom Phabricator config
  template:
    src: ffhb.conf.php
    dest: "/var/www/{{ tasks_user }}/opt/phabricator/phabricator/conf/"
    mode: 0700
    owner: "{{ tasks_user }}"
    group: "{{ tasks_group }}"

- name: Enable custom Phabricator config
  copy:
    content: "ffhb"
    dest: "/var/www/{{ tasks_user }}/opt/phabricator/phabricator/conf/local/ENVIRONMENT"
    owner: "{{ tasks_user }}"
    group: "{{ tasks_group }}"
    mode: 0600

- name: Setup Phabricator DB
  command: ./bin/storage upgrade --force
  become: yes
  become_user: "{{ tasks_user }}"
  environment:
    PHP_INI_SCAN_DIR: ":/home/{{ tasks_user }}/.config/etc/php"
  args:
    chdir: "/var/www/{{ tasks_user }}/opt/phabricator/phabricator"

# Start daemons
- name: Copy phabricator.service unit
  template:
    src: phabricator.service
    dest: "/home/{{ tasks_user }}/.config/systemd/user/"
    owner: "{{ tasks_user }}"
    group: "{{ tasks_group }}"
    mode: 0644

- name: Enable and start phabricator.service
  systemd:
    name: phabricator.service
    state: started
    enabled: yes
    scope: user
  become: yes
  become_user: "{{ tasks_user }}"

- name: Enable linger for user systemd instance
  command: loginctl enable-linger {{ tasks_user|quote }}
  args:
    creates: /var/lib/systemd/linger/{{ tasks_user|quote }}
