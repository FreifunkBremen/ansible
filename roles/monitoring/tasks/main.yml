---
- name: Add vHosts
  shell: space-mod-vhost add --domain={{ item }}
  args:
    creates: "/var/www/{{ monitoring_user }}/domains/{{ item }}"
  with_items:
    - "{{ monitoring_domain }}"

- name: Add vHosts (SSL)
  shell: space-mod-vhost add --domain={{ item }} --ssl
  args:
    creates: "/readonly/{{ monitoring_user }}/log/{{ item }}-error.log"
  with_items:
    - "{{ monitoring_domain }}"

- name: Create needed folder structure
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ monitoring_user }}"
    group: "{{ monitoring_group }}"
    mode: 0755
  with_items:
    - /home/{{ monitoring_user }}/.config/etc
    - /home/{{ monitoring_user }}/.config/etc/nagios
    - /home/{{ monitoring_user }}/.config/etc/nagios/objects
    - /home/{{ monitoring_user }}/.config/etc/nagios/objects/commands
    - /home/{{ monitoring_user }}/.config/systemd
    - /home/{{ monitoring_user }}/.config/systemd/user
    - /home/{{ monitoring_user }}/.local
    - /home/{{ monitoring_user }}/.local/bin
    - /home/{{ monitoring_user }}/.ssh
    - /home/{{ monitoring_user }}/.var
    - /home/{{ monitoring_user }}/.var/tmp
    - /home/{{ monitoring_user }}/.var/tmp/nagios
    - /home/{{ monitoring_user }}/.var/tmp/nagios-plugins
    - /home/{{ monitoring_user }}/.var/tmp/check_multi
    - /home/{{ monitoring_user }}/.opt/nagios-plugins-custom
    - /home/{{ monitoring_user }}/.opt/nagios/etc/apache2
    - /home/{{ monitoring_user }}/.opt/nagios/etc/init.d
    - /home/{{ monitoring_user }}/.opt/nagios/var/lock
    - /home/{{ monitoring_user }}/.opt/nagios/var/rw
    - /var/www/{{ monitoring_user }}/cgi-bin/nagios

- name: Create some symlinks
  file:
    src: "/var/www/{{ monitoring_user }}/{{ item.src }}"
    dest: "/home/{{ monitoring_user }}/{{ item.dest }}"
    owner: "{{ monitoring_user }}"
    group: "{{ monitoring_group }}"
    state: link
    force: yes
  with_items:
    - { src: 'cgi-bin/nagios', dest: '.opt/nagios/sbin' }
    - { src: 'domains/{{ monitoring_domain }}', dest: '.opt/nagios/share' }

- name: Retrieve Nagios version
  shell: /home/{{ monitoring_user }}/.opt/nagios/bin/nagios -V 2>&1 | awk 'NR==2{print $3}'
  ignore_errors: yes
  register: nagios_version
  changed_when: false

- block:
  - name: Download and extract Nagios source
    unarchive:
      src: "https://assets.nagios.com/downloads/nagioscore/releases/nagios-{{ monitoring_nagios_version }}.tar.gz"
      dest: "/home/{{ monitoring_user }}/.var/tmp/nagios"
      copy: no

  - name: Configure the source
    command: "./configure --prefix=/home/{{ monitoring_user }}/.opt/nagios --with-htmurl=/ --with-initdir=/home/{{ monitoring_user }}/.opt/nagios/etc/init.d --with-httpd-conf=/home/{{ monitoring_user }}/.opt/nagios/etc/apache2 --with-this-user --with-cgiurl=/cgi-bin/nagios --with-lockfile=/home/{{ monitoring_user }}/.var/tmp/nagios.lock"
    args:
      chdir: "/home/{{ monitoring_user }}/.var/tmp/nagios/nagios-{{ monitoring_nagios_version }}"

  - name: Build and install Nagios
    command: "{{ item }}"
    args:
      chdir: "/home/{{ monitoring_user }}/.var/tmp/nagios/nagios-{{ monitoring_nagios_version }}"
    with_items:
      - make all
      - make install
      - make install-config
      - make install-webconf
      - make install-exfoliation
  when: nagios_version.stdout != monitoring_nagios_version

- name: Retrieve Nagios Plugins version
  shell: /home/{{ monitoring_user }}/.opt/nagios-plugins/libexec/check_apt --version | awk '{ print $4 }' | cut -d\) -f1
  ignore_errors: yes
  register: nagios_plugins_version
  changed_when: false

- block:
  - name: Download and extract nagios-plugins source
    unarchive:
      src: "https://nagios-plugins.org/download/nagios-plugins-{{ monitoring_nagios_plugins_version }}.tar.gz"
      dest: "/home/{{ monitoring_user }}/.var/tmp/nagios-plugins"
      copy: no

  - name: Configure the source
    command: "./configure --prefix=/home/{{ monitoring_user }}/.opt/nagios-plugins --with-cgiurl=/cgi-bin/nagios"
    args:
      chdir: "/home/{{ monitoring_user }}/.var/tmp/nagios-plugins/nagios-plugins-{{ monitoring_nagios_plugins_version }}"

  - name: Build and install Nagios-plugins
    command: "{{ item }}"
    args:
      chdir: "/home/{{ monitoring_user }}/.var/tmp/nagios-plugins/nagios-plugins-{{ monitoring_nagios_plugins_version }}"
    with_items:
      - make all
      - make install
  when: nagios_plugins_version.stdout != monitoring_nagios_plugins_version

- name: Retrieve check_multi version
  shell: /home/{{ monitoring_user }}/.opt/check_multi/libexec/check_multi --version | head -n1 | awk '{ print $2 }' | cut -d_ -f3
  ignore_errors: yes
  register: check_multi_version
  changed_when: false

- block:
  - name: Download and extract check_multi source
    unarchive:
      src: "http://archive.ubuntu.com/ubuntu/pool/universe/n/nagios-plugin-check-multi/nagios-plugin-check-multi_{{ monitoring_check_multi_version }}.orig.tar.gz"
      dest: "/home/{{ monitoring_user }}/.var/tmp/check_multi"
      copy: no

  - name: Download and extract check_multi ubuntu patches
    unarchive:
      src: "http://archive.ubuntu.com/ubuntu/pool/universe/n/nagios-plugin-check-multi/nagios-plugin-check-multi_{{ monitoring_check_multi_version }}-3.1.debian.tar.xz"
      dest: "/home/{{ monitoring_user }}/.var/tmp/check_multi/check_multi-{{ monitoring_check_multi_version }}"
      copy: no

  - name: Patch the source
    shell: patch -p1 -i debian/patches/{{ item }}
    args:
      chdir: "/home/{{ monitoring_user }}/.var/tmp/check_multi/check_multi-{{ monitoring_check_multi_version }}"
    with_items:
      - unescaped-left-brace-in-regex.patch
      - 0.26-defang-make-all.patch
      - 0.26-make-test.patch
      - check_multi-test.patch
      - perl-search-path.patch

  - name: Configure the source
    command: "./configure --prefix=/home/{{ monitoring_user }}/.opt/check_multi --with-tmp_dir=/home/{{ monitoring_user }}/.var/tmp/check_multi"
    args:
      chdir: "/home/{{ monitoring_user }}/.var/tmp/check_multi/check_multi-{{ monitoring_check_multi_version }}"

  - name: Build and install check_multi
    command: "{{ item }}"
    args:
      chdir: "/home/{{ monitoring_user }}/.var/tmp/check_multi/check_multi-{{ monitoring_check_multi_version }}"
    with_items:
      - make all
      - make install
  when: monitoring_check_multi_version != check_multi_version.stdout

- name: Install additional Nagios checks
  copy:
    src: nagios-plugins-custom/
    dest: "/home/{{ monitoring_user }}/.opt/nagios-plugins-custom/"
    owner: "{{ monitoring_user }}"
    group: "{{ monitoring_group }}"
    mode: 0755

- name: Create folder structure
  file:
    path: "/home/{{ monitoring_user }}/.config/etc/nagios/{{ item }}"
    state: directory
    owner: "{{ monitoring_user }}"
    group: "{{ monitoring_group }}"
    mode: 0755
  with_items:
    - contacts_available
    - contacts_enabled
    - hostgroups_available
    - hostgroups_enabled
    - servers_available
    - servers_enabled
    - objects

- name: Copy config files
  template:
    src: "{{ item }}.j2"
    dest: "/home/{{ monitoring_user }}/.config/etc/nagios/{{ item }}"
    owner: "{{ monitoring_user }}"
    group: "{{ monitoring_group }}"
    mode: 0644
  with_items:
    - check_multi_host_dualstack.cmd
    - hostgroups_available/autodiscovered.cfg
    - hostgroups_available/dns-servers.cfg
    - hostgroups_available/etckeeper-server.cfg
    - hostgroups_available/ssh-servers.cfg
    - hostgroups_available/ssh-servers-with-password.cfg
    - nagios.cfg
    - objects/commands/hostchecks.cfg
    - objects/commands/notifications.cfg
    - objects/commands/servicechecks.cfg
    - objects/templates.cfg
    - objects/timeperiods.cfg
    - resource.cfg

- name: Disable global access for single user
  replace:
    dest: "/home/{{ monitoring_user }}/.opt/nagios/etc/cgi.cfg"
    regexp: '^{{ item }}=nagiosadmin$'
    replace: '{{ item }}={{ monitoring_global_access_contact }}'
  with_items:
    - authorized_for_system_information
    - authorized_for_configuration_information
    - authorized_for_full_command_resolution
    - authorized_for_system_commands
    - authorized_for_all_services
    - authorized_for_all_hosts
    - authorized_for_all_service_commands
    - authorized_for_all_host_commands

- name: Copy htaccess file
  template:
    src: htaccess
    dest: "/var/www/{{ monitoring_user }}/{{ item }}/.htaccess"
    mode: 0644
    owner: "{{ monitoring_user }}"
    group: "{{ monitoring_group }}"
  with_items:
    - "domains/{{ monitoring_domain }}"
    - cgi-bin/nagios

- name: Copy systemd file
  copy:
    src: nagios.service
    dest: /home/{{ monitoring_user }}/.config/systemd/user/nagios.service
    mode: 0644
    owner: "{{ monitoring_user }}"
    group: "{{ monitoring_group }}"
