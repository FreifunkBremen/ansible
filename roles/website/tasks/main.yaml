---
- name: Add user
  user: name={{ website_user }} home=/home/{{ website_user }} shell=/bin/zsh

- name: Create needed folder structure
  file: path={{ item }} state=directory recurse=yes owner={{ website_user }} group={{ website_group }} mode=0755
  with_items:
  - /home/{{ website_user }}/.local/bin/
  - /home/{{ website_user }}/.var/jekyll-envs/{{ website_domain }}/
  - /home/{{ website_user }}/.var/log/
  - /home/{{ website_user }}/.cache/
  - /var/www/{{ website_user }}/domains/{{ website_domain }}/
  - /var/www/{{ website_user }}/cgi-bin/

- name: Clone content repository
  git: repo=https://github.com/FreifunkBremen/bremen.freifunk.net dest=/home/{{ website_user }}/.var/jekyll-envs/{{ website_domain }}/ force=yes
  sudo: true
  sudo_user: "{{ website_user }}"

- name: Install Pygments
  apt: name=python-pygments

- name: Install Jekyll and dependencies via bundler
  command: bundle install --path .bundle
  args:
    chdir: /home/{{ website_user }}/.var/jekyll-envs/{{ website_domain }}/
  sudo: true
  sudo_user: "{{ website_user }}"

- name: Install CGI wrapper
  template: src=php-cgi-starter dest=/var/www/{{ website_user }}/cgi-bin/ mode=700 owner={{ website_user }} group={{ website_user }}

- name: Create log file for Github webhook target
  file: path=/home/{{ website_user }}/.var/log/github-webhook.log state=touch owner={{ website_user }} group={{ website_user }}

- name: Install Github webhook target
  template: src=webhook.php dest=/var/www/{{ website_user }}/domains/{{ website_domain }}/ owner={{ website_user }} group={{ website_user }}

- name: Install Jekyll update script
  template: src=update-jekyll.sh dest=/home/{{ website_user }}/.local/bin/update-jekyll.sh mode=700 owner={{ website_user }} group={{ website_user }}


# Meshviewer
- name: Install ruby-sass
  apt: name=ruby-sass

- name: Clone Meshviewer repository
  git: repo=https://github.com/FreifunkBremen/meshviewer.git version=v4 dest=/home/{{ website_user }}/.var/meshviewer/ force=yes
  sudo: true
  sudo_user: "{{ website_user }}"
  register: meshviewer_checkout

- name: Install Meshviewer dependencies
  npm: path=/home/{{ website_user }}/.var/meshviewer
  sudo: true
  sudo_user: "{{ website_user }}"

- name: Install grunt-cli for Meshviewer
  npm: name=grunt-cli path=/home/{{ website_user }}/.var/meshviewer
  sudo: true
  sudo_user: "{{ website_user }}"

- name: Build Meshviewer
  command: chdir=/home/{{ website_user }}/.var/meshviewer ./node_modules/.bin/grunt
  when: meshviewer_checkout.changed
  sudo: true
  sudo_user: "{{ website_user }}"
  args:
    creates: /home/{{ website_user }}/.var/meshviewer/build/

- name: Copy built Meshviewer to www directory
  command: cp -r /home/{{ website_user }}/.var/meshviewer/build/ /var/www/{{ website_user }}/domains/{{ website_domain }}/meshviewer/
  when: meshviewer_checkout.changed
  sudo: true
  sudo_user: "{{ website_user }}"
  args:
    creates: /var/www/{{ website_user }}/domains/{{ website_domain }}/meshviewer/

- name: Install Meshviewer config
  copy: src=config.json dest=/var/www/{{ website_user }}/domains/{{ website_domain }}/meshviewer/ mode=0644 owner={{ website_user }} group={{ website_user }}
  when: meshviewer_checkout.changed


# Apache

# TODO: this should be replaced by some actually signed certificate:
- name: Generate self-signed SSL certificate
  command: openssl req -new -x509 -nodes -out /etc/ssl/certs/{{ website_domain }}.pem -keyout /etc/ssl/private/{{ website_domain }}.key -days 365 -subj "/CN={{ website_domain }}"
  args:
    creates: /etc/ssl/certs/{{ website_domain }}.pem
    creates: /etc/ssl/private/{{ website_domain }}.key

- name: Install Apache site config (common part)
  template: src=ffhb-website-common.conf dest=/etc/apache2/ mode=644

- name: Install Apache site config
  template: src=ffhb-website.conf dest=/etc/apache2/sites-available/ mode=644

- name: Enable Apache CGI module
  command: a2enmod cgi
  notify: restart apache

- name: Enable Apache site config
  command: a2ensite ffhb-website
  notify: restart apache

- name: Run Jekyll
  command: /home/{{ website_user }}/.local/bin/update-jekyll.sh
  sudo: true
  sudo_user: "{{ website_user }}"
