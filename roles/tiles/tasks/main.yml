---
- name: Add user
  user:
    name: "{{ tiles_user }}"
    home: "/home/{{ tiles_user }}"
    shell: /bin/zsh
    groups: webusers

- name: Download map data of Germany
  get_url:
    url: https://openmaptiles.os.zhdk.cloud.switch.ch/v3.3/extracts/germany.mbtiles
    dest: "/home/{{ tiles_user }}/germany.mbtiles"
    owner: "{{ tiles_user }}"
    group: "{{ tiles_group }}"
  async: 3600
  poll: 0
  register: download_sleeper
  when: not ansible_check_mode

- name: Create directory for Apache log files
  file:
    path: "/var/log/apache2/{{ tiles_user }}"
    state: directory
    owner: root
    group: "{{ tiles_group }}"
    mode: 0750

- name: Create needed folder structure
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ tiles_user }}"
    group: "{{ tiles_group }}"
    mode: 0755
  with_items:
  - /home/{{ tiles_user }}/.opt
  - /home/{{ tiles_user }}/.var/gollum-envs
  - /home/{{ tiles_user }}/.fonts
  - /var/www/{{ tiles_user }}/domains/{{ tiles_domain }}
  - /var/www/{{ tiles_user }}/cgi-bin
  - /var/www/{{ tiles_user }}/fcgi-bin

### Install tessera, style and dependencies
- name: Install tessera tile server and dependencies
  npm:
    name: "{{ item }}"
    path: "/home/{{ tiles_user }}/"
  with_items:
    - "@mapbox/tilelive-vector"
    - tessera
    - "@mapbox/mbtiles"
    - tilelive-tmstyle
  become: yes
  become_user: "{{ tiles_user }}"

- name: Install modified OSM Bright style
  git:
    repo: "{{ tiles_git_root }}"
    dest: "/home/{{ tiles_user }}/mapbox-studio-osm-bright.tm2"
    version: "{{ tiles_git_commit }}"
  become: yes
  become_user: "{{ tiles_user }}"

- name: Install OpenSans font
  copy:
    src: "OpenSans/{{ item }}"
    dest: "/home/{{ tiles_user }}/.fonts/{{ item }}"
    mode: 0644
    owner: "{{ tiles_user }}"
    group: "{{ tiles_group }}"
  with_items:
  - OpenSans-Bold.ttf
  - OpenSans-Italic.ttf
  - OpenSans-LightItalic.ttf
  - OpenSans-Light.ttf
  - OpenSans-Regular.ttf
  - OpenSans-Semibold.ttf

### Setup autostart
- name: Copy tessera.service unit
  template:
    src: tessera.service
    dest: "/home/{{ tiles_user }}/.config/systemd/user/"
    mode: 0644
    owner: "{{ tiles_user }}"
    group: "{{ tiles_group }}"
  notify: restart tessera

- name: Enable and start tessera.service
  systemd:
    name: tessera.service
    scope: user
    state: started
    enabled: yes
  become: yes
  become_user: "{{ tiles_user }}"

- name: Enable linger for user systemd instance
  command: loginctl enable-linger {{ tiles_user|quote }}
  args:
    creates: /var/lib/systemd/linger/{{ tiles_user|quote }}

### Configure apache
- name: Enable Apache cache modules
  apache2_module:
    state: present
    name: cache_disk

- name: Get letsencrypt certificates
  lineinfile:
    dest: /etc/letsencrypt/domains.txt
    line: "{{ tiles_subdomain }}.{{ main_domain }} {{ tiles_subdomain }}.{{ alt_domain }}"
    create: yes
    mode: 0644
    owner: root
    group: root
  notify: regenerate certificates

- name: Install Apache vHost config
  template:
    src: apache2.conf
    dest: "/etc/apache2/sites-available/{{ tiles_user }}.{{ tiles_domain }}.conf"
    mode: 0644
    owner: root
    group: root
  notify: reload apache

- name: Enable Apache vHost config
  command: "a2ensite {{ tiles_user }}.{{ tiles_domain }}"
  args:
    creates: "/etc/apache2/sites-enabled/{{ tiles_user }}.{{ tiles_domain }}.conf"
  notify: reload apache

### Wait for download to finish
- name: Waiting for map data download to complete
  async_status:
    jid: "{{ download_sleeper.job_id }}"
  register: download_result
  until: download_result.finished
  when: 'download_sleeper is not undefined and "job_id" in download_sleeper'
  retries: 30
